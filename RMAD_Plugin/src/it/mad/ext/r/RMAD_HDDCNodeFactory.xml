<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="./default.png" type="Manipulator">
    <name>High Dimensional Data Clustering</name>
    
    <shortDescription>
        HDDC(High Dimensional Data Clustering) is a model-based clustering method. It is based on the Gaussian Mixture Model and on * nthe idea that the data lives in subspaces with a lower dimension than the dimension of the original * nspace. It uses the Expectation - Maximisation algorithm to estimate the parameters of the model.
    </shortDescription>
    
    <fullDescription>
        <intro>
        New discriminant analysis and data clustering methods for high dimensional data, based on the assumption that high-dimensional data live in different subspaces with low dimensionality, proposing a new parametrization of the Gaussian mixture model which combines the ideas of dimension reduction and constraints on the model.
        HDDC(High Dimensional Data Clustering) is a model-based clustering method. It is based on the Gaussian Mixture Model and on the idea that the data lives in subspaces with a lower dimension than the dimension of the original space. It uses the Expectation - Maximisation algorithm to estimate the parameters of the model.
        <br/>
		<br/>
		More details about "HDDC" and "HDclassif":
		<br/>
		<a href="http://cran.r-project.org/web/packages/HDclassif/HDclassif.pdf">HDclassif</a> 
        <br/>
        <br/>
		More details about R:
		<br/>
		<a href="http://www.r-project.org/">http://www.r-project.org/</a>
		<br/>
		<a href="http://cran.r-project.org/doc/contrib/Short-refcard.pdf">Short-refcard.pdf</a>
		</intro>
        
        

        <tab name="Standard Options">
        	<option name="Filter">Filtering of data matrix or data frame. Each row must correspond to an observation, and each column must correspond to a variable. All variables must be numeric. Missing values (NAs) are allowed.</option>
        	<option name="K (clusters)">A vector of integers specifying the number of clusters for which the BIC and the parameters are to be calculated; the function keeps the parameters which maximizes the BIC. Note that the length of the vector K can’t be larger than 20. Use the edit text to choose a vector of integer clusters, separating them with a semicolon (";") </option>
        </tab>
        <tab name="Advanced Options">
            <option name="Model">A character string vector, or an integer vector indicating the models to be used. The available models are: <br/>"AkjBkQkDk"; <br/>"AkBkQkDk"; <br/>"ABkQkDk"; <br/>"AkjBQkDk"; <br/>"AkBQkDk"; <br/>"ABQkDk"; <br/>"AkjBkQkD"; <br/>"AkBkQkD"; <br/>"ABkQkD"; <br/>"AkjBQkD"; <br/>"AkBQkD"; <br/>"ABQkD"; <br/>"AjBQD"; <br/>"ABQD". <br/>The default is model="AkjBkQkDk", the most general model. <br/> Akj are the parameters of the classes subspaces: <br/> if Akj: each class has its parameters and there is one parameter for each dimension; <br/> if Ak: the classes have different parameters but there is only one per class; <br/> if Aj: all the classes have the same parameters for each dimension (it’s a particular case with a common orientation matrix); <br/> if A: all classes have the same one parameter. <br/> Bk are the noises of the classes subspaces: <br/> If Bk: each class has its proper noise; <br/> if B: all classes have the same noise. <br/> Qk is the orientation matrix of each class: <br/> if Qk: all classes have its proper orientation matrix; <br/> if Q: all classes have the same orientation matrix. <br/> Dk is the intrinsic dimension of each class: <br/> if Dk: the dimensions are free and proper to each class; <br/> if D: the dimension is common to all classes.</option>
            <option name="Threshold">A float strictly within 0 and 1. It is the threshold used in the Cattell’s Scree-Test.</option>
            <option name="com_dim">It is used only for common dimensions models. The user can give the common dimension he wants. If used, it must be an integer. Its default is set to NULL.</option>
            <option name="Maximum number of iterations">The maximum number of iterations allowed. The default is 60.</option>
            <option name="eps">A positive double. It is the stopping criterion: the algorithm stops when the difference between two successive Log Likelihoods is lower than ‘eps’.</option>
            <option name="Graph">It is for comparison sake only, when several estimations are run at the same time (either when using several models, or when using cross-validation to select the best dimension/threshold). If graph = TRUE, the plot of the results of all estimations is displayed. Default is FALSE.</option>
            <option name="Algorithm">A character string indicating the algorithm to be used. The available algorithms are the Expectation-Maximisation ("EM"), the Classification E-M ("CEM") and the Stochastic E-M ("SEM"). The default algorithm is the "EM".</option>
            <option name="D">This parameter has several functions: <br/>“Cattell”: The Cattell’s scree-test is used to gather the intrinsic dimension of each class. If the model is of common dimension (models 7 to 14), the scree-test is done on the covariance matrix of the whole dataset. <br/>“BIC”: The intrinsic dimensions are selected with the BIC criterion. See Bouveyron et al.(2010) for a discussion of this topic. For common dimension models, the procedure is done on the covariance matrix of the whole dataset.</option>
            <option name="Initialization">A character string or a vector of clusters. It is the way to initialize the E-M algorithm. There are four ways of initialization: <br/>“param”: it is initialized with the parameters, the means being generated by a multivariate normal distribution and the covariance matrix being common to the whole sample. <br/>“mini-em”: it is an initialization strategy, the classes are randomly initialized and the E-M algorithm makes several iterations, this action is repetead a few times (the default is 5 iterations and 10 times), at the end, the initialization chosen is the one which maximize the log-likelihood (see mini.nb for more information about its parametrization) <br/>“random”: the classes are randomly given using a multinomial distribution “kmeans”: the classes are initialized using the kmeans function (with: algorithm="Hartigan-Wong"; nstart=4; iter.max=50); note that the user can use his own arguments for kmeans using the dot-dot-dot argument.</option>
            <option name="mini.nb">A vector of integers of length two. This parameter is used in the “mini-em” initialization. The first integer sets how many times the algorithm is repeated; the second sets the maximum number of iterations the algorithm will do each time. For example, if init=“mini-em” and mini.nb=c(5,10), the algorithm will be launched 5 times, doing each time 10 iterations; finally the algorithm will begin with the initialization that maximizes the log-likelihood.</option>
            <option name="Scaling">Logical: whether to scale the dataset (mean=0 and standard-error=1 for each variable) or not. By default the data is not scaled.</option>
            <option name="Min. Individuals">This parameter is used to control for the minimum population of a class. If the population of a class becomes strictly inferior to ’min.individuals’ then the algorithm stops and gives the message: ’pop &lt; min.indiv.’. Here the meaning of "population of a class" is the sum of its posterior probabilities. The value of ’min.individuals’ cannot be lower than 2.</option>
            <option name="Noise Control">This parameter avoids to have a too low value of the ’noise’ parameter b. It guarantees that the dimension selection process do not select too many dimensions (which leads to a potential too low value of the noise parameter b). When selecting the intrinsic dimensions using Cattell’s scree-test or BIC, the function doesn’t use the eigenvalues inferior to noise.ctrl, so that the intrinsic dimensions selected can’t be higher or equal to the order of these eigenvalues.</option>         
            
        </tab>

    </fullDescription>
    
    <ports>
        <inPort index="0" name="Data input">Data input</inPort>

        <outPort index="0" name="Data output">R MAD Result Data</outPort>

    </ports>    
    <views>
        <view index="0" name="R MAD Std Output">The text sent to standard out during the execution of R executable as well as the text of the .Rout file generated by R.</view>
        <view index="1" name="R MAD Err Output">The text sent to standard error during the execution of R executable as well as the text of the .Rout file generated by R. (If it appears in gray, it's the output of a previously failing run which is preserved for your trouble shooting.)</view>
    </views>
</knimeNode>
